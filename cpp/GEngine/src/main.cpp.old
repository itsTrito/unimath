#include <SDL2/SDL.h>
#include <SDL2/SDL_main.h>
#include <SDL2/SDL_image.h>
#include <SDL2/SDL_ttf.h>
#include <SDL2/SDL_opengl.h>
#include "Renderer3D.hpp"
#include "EventContainer.hpp"
#include "Window.hpp"


int main(int argc, char* argv[]) {
  //SDL_Init(SDL_INIT_EVERYTHING);
  //IMG_Init(IMG_INIT_PNG);
  //TTF_Init();

  //SDL_Window* sdlWindow = SDL_CreateWindow("Exemple", SDL_WINDOWPOS_CENTERED, SDL_WINDOWPOS_CENTERED, 500, 500, SDL_WINDOW_RESIZABLE);
  
  //SDL_Renderer* sdlRenderer = SDL_CreateRenderer(sdlWindow, -1, SDL_RENDERER_PRESENTVSYNC);
  TIE::Renderer3D renderer = TIE::Renderer3D();
  TIE::Window* window = new TIE::Renderer3D();
  

  bool isOpen = true;

  while(isOpen){
    //Boucle de jeu
    //Gestion des évènements
    while (TIE::EventContainer::poll()){
      switch(TIE::EventContainer::GetType()){
        case SDL_KEYDOWN:
          break;
        case SDL_QUIT:
          isOpen = false;
          break;

      }
    }

    //Gestion des mises à jour
    //Gestion de l'affichage

    //SDL_RenderPresent(sdlRenderer);
    //SDL_GL_SwapWindow(sdlWindow);
    window->RenderUpdate();
    
  }

  destroy(window);
  //SDL_DestroyRenderer(sdlRenderer);
  //SDL_DestroyWindow(sdlWindow);
  //SDL_GL_DeleteContext(glContext);

  //TTF_Quit();
  //IMG_Quit();
  //SDL_Quit();  
  return 0;
}